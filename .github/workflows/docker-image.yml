name: Construir y desplegar imagen de Docker

on:
  # Se ejecuta en pushs que apuntan a la rama predeterminada
  push:
    branches: "main"
    paths: ["main.py", "Dockerfile"]

# Permite una implementaci칩n simult치nea
concurrency:
  group: "docker-image"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # lista de im치genes Docker para usar como nombre base para las etiquetas
          images: danicrdev/poli-ci-cd-backend
          # generar etiquetas Docker basadas en los siguientes eventos
          tags: |
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Despliegue de la aplicaci칩n en Render
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Despliegue de la imagen de Docker en Render
        run: curl -s -o /dev/null ${{ secrets.RENDER_DEPLOY_HOOK }}